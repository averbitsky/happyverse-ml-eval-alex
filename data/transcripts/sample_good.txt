Q1: Tell me about a time you designed or optimized a private 5G or LTE RAN deployment. What technologies did you use, what KPIs did you track, and how did you validate performance on-site?
"In my previous role at Orion Wireless, I led the deployment of a private 5G SA network for a manufacturing plant. We used a Baicells gNB setup connected to an Open5GS core running in Kubernetes. Our KPIs were latency, handover success rate, and throughput per slice. We validated latency using iPerf and ping tests across different parts of the shop floor and monitored handover reliability with UE logs and drive tests. On-site, we worked with field engineers to tune power levels and adjust antenna tilt after seeing coverage gaps on the plant floor. We also used Prometheus + Grafana dashboards to continuously monitor RSRP and SINR, which allowed us to quickly detect weak coverage zones and resolve them."

Q2: Walk me through how you integrated a 5G core (e.g., Open5GS, Magma, or similar) into an enterprise network. What challenges did you face with routing, NAT, or DNS, and how did you resolve them?
"At Orion, we deployed Open5GS inside a Kubernetes cluster, fronted by MetalLB for load balancing. Integration with the enterprise LAN required careful NAT configuration since many IoT devices needed to reach cloud services. One issue was DNS resolution failing when UEs switched between slices. We traced it back to inconsistent NAT44 translations at the UPF. The fix was to implement a stateful NAT with connection tracking and to configure redundant DNS forwarders inside the enterprise DMZ. Another challenge was overlapping IP address ranges with the enterprise VLANs — we solved that by assigning a dedicated /24 to the private 5G slice and updating routing tables so that enterprise traffic routed cleanly through the UPF gateway. Once those issues were addressed, end devices like cameras and sensors integrated seamlessly with the enterprise monitoring tools."

Q3: Imagine a client reports intermittent latency spikes on their factory floor private 5G network. Devices drop video feeds briefly every few minutes. How would you debug and isolate the root cause?
"The first step would be to reproduce the issue and collect baseline metrics. I’d start with packet captures at the UPF and gNB, and compare them against Grafana dashboards showing latency and jitter over time. If the spikes are periodic, that often points to scheduling or interference. I’d check whether the UPF CPU was spiking or whether the gNB was experiencing HARQ retransmission bursts. If it looks RF-related, I’d run spectrum analysis on-site to see if there’s interference from machinery or overlapping WiFi channels. If it’s core-related, I’d enable additional Open5GS logging and track bearer state transitions. In one past case, we discovered that periodic latency spikes came from misconfigured QoS parameters that caused bufferbloat during video bursts. We fixed it by adjusting QCI/5QI mappings and enabling active queue management in the UPF. That stabilized video streaming across the entire floor."